name: Build Firmware Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Firmware version (e.g., 0.1.6)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        pip install pillow  # For png2c.py script
    
    - name: Build firmware
      run: |
        pio run -e adafruit_feather_esp32s3_reversetft
    
    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Prepare release files
      run: |
        mkdir -p release
        # Copy the main firmware.bin for OTA updates
        cp .pio/build/adafruit_feather_esp32s3_reversetft/firmware.bin release/firmware.bin
        # Copy all build outputs with version in filename
        cp .pio/build/adafruit_feather_esp32s3_reversetft/firmware.bin release/deskhog-firmware-${{ steps.get_version.outputs.VERSION }}.bin
        cp .pio/build/adafruit_feather_esp32s3_reversetft/firmware.elf release/deskhog-firmware-${{ steps.get_version.outputs.VERSION }}.elf
        cp .pio/build/adafruit_feather_esp32s3_reversetft/partitions.bin release/deskhog-partitions-${{ steps.get_version.outputs.VERSION }}.bin
        cp .pio/build/adafruit_feather_esp32s3_reversetft/bootloader.bin release/deskhog-bootloader-${{ steps.get_version.outputs.VERSION }}.bin
        # Generate flash command
        echo "esptool.py --chip esp32s3 --port /dev/ttyUSB0 --baud 1500000 write_flash -z 0x0 deskhog-bootloader-${{ steps.get_version.outputs.VERSION }}.bin 0x8000 deskhog-partitions-${{ steps.get_version.outputs.VERSION }}.bin 0x10000 deskhog-firmware-${{ steps.get_version.outputs.VERSION }}.bin" > release/flash-command.txt
    
    - name: Upload all build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-complete-${{ steps.get_version.outputs.VERSION }}
        path: release/
    
    - name: Upload Release Assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/firmware.bin
          release/deskhog-firmware-${{ steps.get_version.outputs.VERSION }}.bin
          release/deskhog-firmware-${{ steps.get_version.outputs.VERSION }}.elf
          release/deskhog-partitions-${{ steps.get_version.outputs.VERSION }}.bin
          release/deskhog-bootloader-${{ steps.get_version.outputs.VERSION }}.bin
          release/flash-command.txt